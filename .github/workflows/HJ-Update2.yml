name: Update User Profile_ver22

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - '*'
  push:
    branches:
      #- '*'
      - 'sc-main'

permissions:
  contents: write

jobs:
  update_profile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          

      # Install dependencies for both cases
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Set Event Name
        id: set_event_name
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "EVENT_NAME=Pull Request" >> $GITHUB_ENV
            echo "MERGED_STATUS=${{ github.event.pull_request.merged }}" >> $GITHUB_ENV
          elif [[ ${{ github.event_name }} == 'push' ]]; then
            echo "EVENT_NAME=Push" >> $GITHUB_ENV
          elif [[ ${{ github.event_name }} == 'workflow_run' ]]; then
            echo "EVENT_NAME=Workflow Run" >> $GITHUB_ENV
          fi

      - name: Set User Information
        if: github.event_name == 'push'
        id: user_info_push
        run: |
          USER_NAME=$(git log -1 --pretty=format:'%an')
          COMMIT_TIME=$(git log -1 --pretty=format:'%ci')
          COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')
          FROM_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          TO_BRANCH=${{ github.ref_name }}
          echo "USER_NAME=$USER_NAME" >> $GITHUB_ENV
          echo "COMMIT_TIME=$COMMIT_TIME" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "FROM_BRANCH=$FROM_BRANCH" >> $GITHUB_ENV
          echo "TO_BRANCH=$TO_BRANCH" >> $GITHUB_ENV

      - name: Set User Information
        if: github.event_name == 'pull_request'
        id: user_info_pull_request
        run: |
          USER_NAME=$(git log -1 --pretty=format:'%an')
          COMMIT_TIME=$(git log -1 --pretty=format:'%ci')
          COMMIT_MESSAGE="${{ github.event.pull_request.title }}"  # Use the pull request title
          FROM_BRANCH=${{ github.event.pull_request.head.ref }}
          TO_BRANCH=${{ github.event.pull_request.base.ref_name }}
          echo "USER_NAME=$USER_NAME" >> $GITHUB_ENV
          echo "COMMIT_TIME=$COMMIT_TIME" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "FROM_BRANCH=$FROM_BRANCH" >> $GITHUB_ENV
          echo "TO_BRANCH=$TO_BRANCH" >> $GITHUB_ENV

      - name: Read Existing Profile Content
        if: github.event_name == 'push'
        id: read_existing
        run: |
          if [ -f "profile.md" ]; then
            EXISTING_CONTENT=$(cat profile.md)
            echo "::set-output name=existing_content::$EXISTING_CONTENT"
          else
            echo "::set-output name=existing_content::"
          fi

      - name: Update Markdown File on push
        if: github.event_name == 'push'
        run: |
        
          # echo "::set-output name=new_content::" >> profile.md
          echo "## User Profile" >> profile.md
          echo "'$USER_NAME'가 '$COMMIT_TIME'에 '$COMMIT_MESSAGE'로 merge 하였음을 기록합니다">>profile.md  
        
          # echo "- User ID or Nickname: ${{ steps.user_info.outputs.user_name }}" >> profile.md
          # echo "- Commit Time: ${{ steps.user_info.outputs.commit_time }}" >> profile.md
          # echo "- Commit Message: ${{ steps.user_info.outputs.commit_message }}" >> profile.md
          echo "" >> profile.md
          echo "${{ steps.read_existing.outputs.existing_content }}" >> profile.md
          echo "${{ steps.new_content.outputs.new_content }}" >> profile.md

      - name: Commit and Push Changes on push
        if: github.event_name == 'push'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add profile.md
          git commit -m "Update user profile"
          git push
      
      - name: Run kakaotalkAlarm.py
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        #run: python .github/workflows/sendToMeAlarm.py
        run: python .github/workflows/kakaotalkAlarm.py
        




      # - name: Run kakaotalkAlarm.py on pull request
      #   if: github.event_name == 'pull_request'
      #   #run: python .github/workflows/kakaotalkAlarm.py
      #   run: python .github/workflows/sendToMeAlarm.py

      # - name: Run kakaotalkAlarm.py on push
      #   if: github.event_name == 'push'
      #   run: python .github/workflows/sendToMeAlarm.py
    
